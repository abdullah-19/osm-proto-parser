/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package osm.proto.parser;

import lombok.Value;
import osm.proto.parser.adapter.buffer.FileBlock;

import java.io.*;
import java.util.concurrent.Flow;

@Value
public class OsmProtoParser implements Flow.Publisher<FileBlock> {
    File file;

    public OsmProtoParser(String fileName) throws FileNotFoundException {
        file = new File(fileName);

        if(!file.exists()) {
            throw new FileNotFoundException("File \"" + fileName + "\" does not exist.");
        }
    }

    public FileBlock getFileBlockAtPosition(Long position) {
        try {
            return FileBlock.readFileBlock(file, position);
        } catch (IOException e) {
            if (!(e instanceof EOFException)) {
                e.printStackTrace();
            }
            return null;
        }
    }

    @Override
    public void subscribe(Flow.Subscriber<? super FileBlock> subscriber) {
        try {
            FileInputStream fileInputStream = new FileInputStream(file);

            while(true) {
                FileBlock fileBlock = FileBlock.readFileBlock(fileInputStream);

                subscriber.onNext(fileBlock);
            }
        } catch (IOException e) {
            if (!(e instanceof EOFException)) {
                e.printStackTrace();
            }
        }

        subscriber.onComplete();
    }
}
